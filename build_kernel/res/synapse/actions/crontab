# Modified work Copyright (c) 2017 UpInTheAir. All rights reserved.
#
# Authors:	dorimanx
#		UpInTheAir
#
# This software and associated documentation files (the "Software")
# is proprietary of UpInTheAir. No part of this Software, either
# material or conceptual may be copied or distributed, transmitted,
# transcribed, stored in a retrieval system or translated into any
# human or computer language in any form by any means, electronic,
# mechanical, manual or otherwise, or disclosed to third parties
# without the express written permission of UpInTheAir.
#
# Alternatively, this program is free software in case of open
# source project:
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this Software, to redistribute the Software
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

if [ -e /su/xbin/busybox ]; then
	BB=/su/xbin/busybox;
elif [ -e /system/xbin/busybox ]; then
	BB=/system/xbin/busybox;
elif [ -e /system/bin/busybox ]; then
	BB=/system/bin/busybox;
fi;

if [ "$($BB mount | grep rootfs | cut -c 26-27 | grep -c ro)" -eq "1" ]; then
	$BB mount -o remount,rw /;
fi;

case $1 in

master)
  P=/res/synapse/SkyHigh/cron/master;

  if [ ! -z "$2" ]; then
	if [ "$2" == Disabled ]; then
		echo "0" > $P;
		pkill -f crond;
		pkill -f "/res/crontab_service/service.sh";
		if [ -d /data/crontab ]; then
			rm -rf /data/crontab;
		fi;
	elif [ "$2" == Enabled ]; then
		echo "1" > $P;
		$BB nohup $BB sh /res/crontab_service/service.sh 2> /dev/null;
	fi;
  fi;

  copy=$(cat $P);
  if [ "$copy" == 0 ]; then
	echo Disabled
  elif [ "$copy" == 1 ]; then
	echo Enabled
  fi;
  ;;

log)
  if [ -d /data/crontab ]; then
	if [ ! -e /data/crontab/cron-clear-file-cache ]; then
		echo "no data" > /data/crontab/cron-clear-file-cache;
	fi;
	if [ ! -e /data/crontab/cron-clear-ram-cache ]; then
		echo "no data" > /data/crontab/cron-clear-ram-cache;
	fi;
	if [ ! -e /data/crontab/cron-db-optimizing ]; then
		echo "no data" > /data/crontab/cron-db-optimizing;
	fi;
	if [ ! -e /data/crontab/cron-fstrim ]; then
		echo "no data" > /data/crontab/cron-fstrim;
	fi;
	if [ ! -e /data/crontab/cron-ram-release ]; then
		echo "no data" > /data/crontab/cron-ram-release;
	fi;
	if [ ! -e /data/crontab/cron-reset_battery ]; then
		echo "no data" > /data/crontab/cron-reset_battery;
	fi;
	if [ ! -e /data/crontab/cron-twrp_backup ]; then
		echo "no data" > /data/crontab/cron-twrp_backup;
	fi;

	chmod 777 /data/crontab/*
	cat /data/crontab/cron-clear-file-cache > /data/crontab/cron_log;
	echo "---" >> /data/crontab/cron_log;
	cat /data/crontab/cron-clear-ram-cache >> /data/crontab/cron_log;
	echo "---" >> /data/crontab/cron_log;
	cat /data/crontab/cron-db-optimizing >> /data/crontab/cron_log;
	echo "---" >> /data/crontab/cron_log;
	cat /data/crontab/cron-fstrim >> /data/crontab/cron_log;
	echo "---" >> /data/crontab/cron_log;
	cat /data/crontab/cron-ram-release >> /data/crontab/cron_log;
	echo "---" >> /data/crontab/cron_log;
	cat /data/crontab/cron-reset_battery >> /data/crontab/cron_log;
	echo "---" >> /data/crontab/cron_log;
	cat /data/crontab/cron-twrp_backup >> /data/crontab/cron_log;

	# push all to one log.
	CRON_LOG=$(cat /data/crontab/cron_log);
	echo "$CRON_LOG";
  else
	echo "Please enable Crontab first !!";
  fi;
  ;;

esac;

if [ -f "$1" ]; then
	if [[ ! -z "$2" ]]; then
		$BB echo "$2" > "$1"
	fi;

	$BB echo "$($BB cat "$1")";
fi;
