# Modified work Copyright (c) 2017 UpInTheAir. All rights reserved.
#
# Authors:	apbaxel
#		UpInTheAir
#
# This software and associated documentation files (the "Software")
# is proprietary of UpInTheAir. No part of this Software, either
# material or conceptual may be copied or distributed, transmitted,
# transcribed, stored in a retrieval system or translated into any
# human or computer language in any form by any means, electronic,
# mechanical, manual or otherwise, or disclosed to third parties
# without the express written permission of UpInTheAir.
#
# Alternatively, this program is free software in case of open
# source project:
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this Software, to redistribute the Software
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

if [ -e /su/xbin/busybox ]; then
	BB=/su/xbin/busybox;
elif [ -e /system/xbin/busybox ]; then
	BB=/system/xbin/busybox;
elif [ -e /system/bin/busybox ]; then
	BB=/system/bin/busybox;
fi;

if [ "$($BB mount | grep rootfs | cut -c 26-27 | grep -c ro)" -eq "1" ]; then
	$BB mount -o remount,rw /;
fi;

P=/sys/module/lowmemorykiller/parameters/minfree;

PERM=$($BB stat -c %a $P);
$BB test "$PERM" -lt "664" && $BB chmod 664 $P 2> /dev/null;

#Read/Write
read() {
	VALUE=0;
	NOW=$($BB cat $P);

	for LMK in ${NOW//,/ }; do
		VALUE=$(($VALUE+1));
		if [ "$VALUE" == "$1" ]; then
			$BB echo $((LMK / 256));
			return
		fi;
	done;
}

write() {
	SET=$2;
	LMKARR="";
	VALUE=0;
	NOW=$($BB cat $P);

	for LMK in ${NOW//,/ }; do
		VALUE=$(($VALUE+1));
		if [ "$VALUE" == "$1" ]; then
			if [ "$VALUE" == 1 ]; then
				LMKARR="$((SET * 256))";
			else
				LMKARR="$LMKARR $((SET * 256))";
			fi;
		else
			if [ "$VALUE" == 1 ]; then
				LMKARR="$LMK";
			else
				LMKARR="$LMKARR $LMK";
			fi;
		fi;
	done;

	$BB echo "${LMKARR// /,}" > $P 2> /dev/null;
}

#Profiles
Low(){
	MINFREE="1536,2048,2560,8192,16384,20480";
	COST="64";
}

Medium(){
	MINFREE="1536,2048,4096,16384,18432,20480";
	COST="48";
}

Custom(){
	MINFREE="1536,2048,4096,16384,28672,32768";
	COST="32";
}

Default(){
	MINFREE="18432,23040,27648,32256,56250,81250";
	COST="32";
}

Aggressive(){
	MINFREE="2048,4096,4096,16384,32768,49152";
	COST="16";
}

Exterminate(){
	MINFREE="4096,8192,16384,19200,49152,65536";
	COST="16";
}

if [ "$1" == "profile" ]; then
	if [[ ! -z $2 ]]; then
		$BB echo "$2" > /res/synapse/SkyHigh/lmk_prof;
			$2;
			$BB echo "$MINFREE" > $P;
			$BB echo "$COST" > /sys/module/lowmemorykiller/parameters/cost;
	fi;
	
	$BB echo "$(cat /res/synapse/SkyHigh/lmk_prof)";
else
	if [[ ! -z $2 ]]; then
		write "$1" "$2";
	fi;

	$BB echo "$(read "$1")";
fi;
