#!/system/bin/sh
#
# Modified work Copyright (c) 2017 UpInTheAir. All rights reserved.
#
# Authors:	AndreiLux
#		UpInTheAir
#
# This software and associated documentation files (the "Software")
# is proprietary of UpInTheAir. No part of this Software, either
# material or conceptual may be copied or distributed, transmitted,
# transcribed, stored in a retrieval system or translated into any
# human or computer language in any form by any means, electronic,
# mechanical, manual or otherwise, or disclosed to third parties
# without the express written permission of UpInTheAir.
#
# Alternatively, this program is free software in case of open
# source project:
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this Software, to redistribute the Software
# and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.

cat << CTAG
{
    name:"BUS",
    elements:[
	{ SPane:{
		title:"HPM Voltage Control"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"Memory Bus HPM Voltage Margin",
		description:"Set the maximum voltage margin the APM undervolts down to.\n",
		default:$(cat /sys/kernel/debug/mailbox/mif_cl_margin),
		action:"generic /sys/kernel/debug/mailbox/mif_cl_margin",
		unit:" ÂµV", weight:6250.0, min:0, step:1, max:10
	}},
	{ SSpacer:{
		height:2
	}},
	{ SPane:{
		title:"Memory Bus Voltage Control",
		description:"Voltage supplied to the CCI and memory controllers."
	}},
	{ SSpacer:{
		height:1
	}},
`
	while read -r FREQ VOLT; do
		echo '{ SSeekBar:{'
			echo 'title:"'$(($FREQ / 1000))' MHz", description:'" "', default:'"$VOLT"', '
			echo 'action:"mifvolt '"${FREQ}"'", unit:" mV", weight:0.001, min:500000, max:900000, step:6250 }}, '
		echo '{ SSpacer:{ height:1 }},'
	done < /sys/class/devfreq/exynos7-devfreq-mif/volt_table
`
	{ SSpacer:{
		height:2
	}},
	{ SPane:{
		title:"Internal Bus",
		description:"Voltage supplied to the internal auxiliary IP blocks, such as the hardware video decoders, the scaling blocks, the display controllers, and the MMC controllers."
	}},
	{ SSpacer:{
		height:1
	}},
`
	while read -r FREQ VOLT; do
		echo '{ SSeekBar:{'
			echo 'title:"'$(($FREQ / 1000))' MHz", description:'" "', default:'"$VOLT"', '
			echo 'action:"intvolt '"${FREQ}"'", unit:" mV", weight:0.001, min:500000, max:900000, step:6250 }}, '
		echo '{ SSpacer:{ height:1 }},'
	done < /sys/class/devfreq/exynos7-devfreq-int/volt_table
`
	{ SSpacer:{
		height:2
	}},
	{ SPane:{
		title:"Image Signal Processor",
		description:"Voltage supplied to the ISP power plane."
	}},
	{ SSpacer:{
		height:1
	}},
`
	while read -r FREQ VOLT; do
		echo '{ SSeekBar:{'
			echo 'title:"'$(($FREQ / 1000))' MHz", description:'" "', default:'"$VOLT"', '
			echo 'action:"ispvolt '"${FREQ}"'", unit:" mV", weight:0.001, min:500000, max:900000, step:6250 }}, '
		echo '{ SSpacer:{ height:1 }},'
done < /sys/class/devfreq/exynos7-devfreq-isp/volt_table
`
	{ SSpacer:{
		height:2
	}},
    ]
}
CTAG
